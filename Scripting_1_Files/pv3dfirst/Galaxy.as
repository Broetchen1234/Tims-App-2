package {/*	import flash.display.Sprite;	import flash.events.Event;	import flash.display.Sprite;    import flash.events.Event;    import flash.utils.Timer;    import flash.events.TimerEvent;    import flash.display.MovieClip;    import flash.geom.Point;    import flash.geom.Matrix    import flash.ui.Keyboard;    import flash.Event.KeyboardEvent;    import flash.Event.MouseEvent;    import flash.events.KeyboardEvent;    import flash.events.MouseEvent;	import org.papervision3d.cameras.Camera3D;	import org.papervision3d.objects.primitives.Plane;	import org.papervision3d.render.BasicRenderEngine;	import org.papervision3d.scenes.Scene3D;	import org.papervision3d.view.Viewport3D;	import org.papervision3d.materials.*;	import org.papervision3d.objects.primitives.Sphere;*/	public class Galaxy 	{/*		var scene:Scene3D=new Scene3D();		var viewport:Viewport3D = new Viewport3D();		var camera:Camera3D = new Camera3D();		var renderer:BasicRenderEngine = new BasicRenderEngine();		addChild(viewport);		scene.addChild( new Sphere(null, 8, 45, 45, null));		var Star:BitmapAssetMaterial = new BitmapAssetMaterial("Star");		Star.oneSide = true;		Star.smooth = false;		//[Embed(source = "/../assets/White_panel")]		//private var starTexture:Class;						for (var i:uint; i<80; i++) {			var plane:Plane = new Plane(Star, 150, 150, 1, 1);			scene.addChild(plane);			plane.x=Math.random()*8000-1500;			plane.y=Math.random()*8000-1500;			plane.z=Math.random()*8000-1500;			//plane.rotationY=Math.random()*360;		}				addEventListener(Event.ENTER_FRAME, enterFrameHandler);		public function enterFrameHandler(event:Event):void {			renderer.renderScene(scene, camera, viewport);		}		stage.addEventListener(KeyboardEvent.KEY_DOWN, keyPressed);		public function keyPressed(event:KeyboardEvent):void {			switch (event.keyCode) {				case Keyboard.UP :					camera.z +=6;					break;				case Keyboard.DOWN :					camera.z-=6;					break;				case Keyboard.RIGHT :					camera.rotationY+=2;					break;				case Keyboard.LEFT :					camera.rotationY-=2;					break;				case Keyboard.PAGE_UP :					camera.rotationX-=2;					break;				case Keyboard.PAGE_DOWN :					camera.rotationX+=2;					break;			}		}*/		public function Galaxy()		{			// constructor code		}	}}